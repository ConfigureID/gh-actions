name: 'NPM Build'
description: 'Action that tests and builds an NPM Project'

# Action to build an NPM project
# It performs the same steps as the "npm-build" reusable workflow, but it allows to add other steps to the job.
# Steps:
# - Checkout the code
# - Install the specified Node.js version and restores the node_modules cache if it exists
# - Install dependencies (npm ci)
# - Run Tests
# - Build transpiled/minified output
# - Uploads the artifact so the next steps can use it
inputs:
  node_version:  
    description: 'Node.js version to use'
  node-version-file:  
    description: 'File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version, .tool-versions.'
    default: '.node-version'
  npm_token:
    description: 'NPM Token used to download private org packages. Usually ${{ secrets.NPM_TOKEN }}'
    required: false
  dist_dir:
    description: 'Directory where the built project is located'
    required: true
  source_ref:
    description: 'The branch, tag or SHA to checkout. If not specified, the default branch will be used (usually main)'
    required: false
  artifact_name:
    description: 'The name of the artifact to upload. Useful to download it on the next steps of the workflow. Default is build-output'
    required: false
    default: build-output
  test:
    description: 'Indicates if npm run test should be called before the build command'
    required: false
    default: 'true'
  test_name:
    description: 'Name of the app/lib is being tested, in case multiple Unit/Component tests are run. It will be added to the artifact name'
    required: false
    default: ''
  test_results_pattern:
    description: 'Pattern to use to find the test reports and upload them'
    required: false
    default: tmp/test-results.*
  npm_script:
    description: 'Script to run from package.json. Defaults to build'
    required: false
    default: build

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.source_ref }}

    - name: Install Node.js and Restore Cache
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}
        node-version-file: ${{ inputs.node-version-file }}
        registry-url: "https://registry.npmjs.org"

    - name: Cache node_modules
      uses: actions/cache@v4
      id: cache-node-modules
      with:
        path: |
          node_modules
        key: modules-${{ hashFiles('package-lock.json') }}

    - name: Install NPM packages
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm ci
      shell: bash
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm_token }}

    - name: Run tests
      if: ${{ inputs.test == "true" }}
      run: npm run test
      shell: bash

    - name: Build project
      run: npm run ${{ inputs.npm_script }}
      shell: bash

    - name: Upload production-ready build files
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact_name }}
        path: ./${{ inputs.dist_dir }}
        retention-days: 1

    - name: Upload test results
      if: ${{ always() && inputs.test == "true" }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.test_name == '' && 'test-output-unit' || format('test-output-unit-{0}', inputs.test_name) }}
        path: |
          ${{ inputs.test_results_pattern }}
          **/${{ inputs.test_results_pattern }}
        if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`
        retention-days: 1
