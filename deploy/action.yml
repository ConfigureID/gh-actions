name: Deploy
description: "Deploys an static application to a cloud service"

# Action to deploy the project files to a Cloud Service (supports Github Pages and GCS)
# Steps:
# - Creates a Github Deployment object with status "start" and the name
# - Download an artifact from a previous step
# - Deploy the files to the specified path (inputs.to) in Github Pages or GCS
# - Marks the Github Deployment object as "finished" with the status of the workflow (success, failed)
inputs:
  to:  
    description: 'Directory where the project must be deployed to'
    required: true
  artifact_name:
    description: 'The name of the artifact created in a previous step. If not specified, build-output is used'
    required: false
    default: build-output
    type: string
  environment_name:  
    description: 'The environment name to create a deployment. If not specified, uses the value defined to "to"'
    required: false
    default: ''
    type: string
  github_token:
    description: 'GitHub token with permissions to push to the gh-pages branch'
    required: true
    type: string
  cloud_service:
    description: 'Cloud Service to deploy to (supports GH Pages and GCP)'
    required: true
    type: string
  cloud_credentials:
    description: 'Credentials of the cloud service where the project will be deployed to'
    required: false
    type: string
  cloud_bucket:
    description: 'Name of the Cloud service (eg. GCS) bucket'
    required: false
    type: string
  base_url:
    description: 'Base URL where the deployment can be accessed'
    required: false
    type: string
  cache:
    description: 'Enable or disable cache'
    required: true
    type: bool
  allowed_destination:
    description: 'Regex with the allowed destinations. Others will fail'
    required: false
    type: string
    default: '[/]prod$|[/]staging$|[/]dev$|([/](branches|releases)[/][A-Za-z0-9._%+-\/]+$)'
  exclude:
    description: 'Regrex expression to exclude files'
    required: false
    type: string
    default: '.*\.md$|\.gitignore$|\.git/.*$|gha-creds-+\w+\.+json*$|\.github/.*$'
  delete:
    description: 'Delete extra files in the destination not found in the source'
    required: false
    type: bool
    default: true

env:
  TMP_PATH: tmp

runs:
  using: "composite"

  steps:
    - name: Start deployment
      uses: bobheadxi/deployments@v0.4.3
      id: deployment
      with:
        step: start
        token: ${{ inputs.github_token }}
        env: ${{ inputs.environment_name || inputs.to }}
        ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.artifact_name }}
        path: ./${{ env.TMP_PATH }}

    ##################
    # GH Pages
    ##################
    
    - name: Deploy to gh-pages
      if: ${{ inputs.cloud_service == 'gh_pages' }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ inputs.github_token }}
        publish_dir: ./${{ env.TMP_PATH }}
        destination_dir: ./${{ inputs.to }}

    - name: Update deployment status
      if: ${{ inputs.cloud_service == 'gh_pages' }}
      uses: bobheadxi/deployments@v0.4.3
      with:
        step: finish
        token: ${{ inputs.github_token }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        env_url: https://${{ github.event.repository.owner.login }}.github.io/${{ github.event.repository.name }}/${{ inputs.to }}

    ##################
    # GCP
    ##################
    
    # Copies the current action's repository to the specified location, 
    # so other actions from the same repo may be called (see rsync below)
    # This allows us to use the same version of the action for both "deploy" (the current action) and rsync
    - name: Copy custom action repository
      shell: bash
      run: |
        chmod +x ${{ github.action_path }}/copy_actions_repo.sh
        ${{ github.action_path }}/copy_actions_repo.sh
      env:
        CUSTOM_ACTION_REPO_SUBDIRECTORY: ${{ github.action_path }}
        DESTINTATION_PATH: ${{ github.workspace }}/.github/actions

    # Rsync to GCS
    - name: Rsync GCS
      if: ${{ inputs.cloud_service == 'gcp' }}
      uses: ./.github/actions/ConfigureID/gh-actions/rsync
      with:
        to: '${{ inputs.to }}'
        cloud_bucket: '${{ inputs.cloud_bucket }}'
        cloud_credentials: '${{ inputs.cloud_credentials }}'
        allowed_destination: '${{ inputs.allowed_destination }}'
        path: ./${{ env.TMP_PATH }}              
        exclude: '${{ inputs.exclude }}'
        cache: ${{ inputs.cache }}
        delete: ${{ inputs.delete }}

    - name: Update GCS deployment status
      if: ${{ inputs.cloud_service == 'gcp' }}
      uses: bobheadxi/deployments@v0.4.3
      with:
        step: finish
        token: ${{ inputs.github_token }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        env_url: https://${{ inputs.base_url }}/${{ inputs.to }}/index.html
