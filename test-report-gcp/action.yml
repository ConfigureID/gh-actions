name: Upload Tests HTML Report to the GCP
description: "Upload the E2E Tests HTML report to the GCP"

# Action to retrieve the E2E Tests HTML Report and upload it to the GCP.
#
# It will upload it to the same path as the deployment, but in a subpath
#
# Steps:
# - Download the test artifact
# - Sync to GCP 
# - Delete the test artifact is requested
inputs:
    artifact_name:  
      description: 'E2E Test output artifact name. Defaults to "e2e-html-report"'
      default: e2e-html-report
    subpath:
      description: 'Subpath where the artifact must be uploaded. Defaults to "tests"'
      default: tests
    delete_artifact:
      description: 'Whether the artifact must be deleted after being uploaded. Defaults to false'
      default: 'false'

    namespace:  
      description: 'The project namespace (eg adidas). Used as a prefix for the publish directory'
      required: true
    environment_name:  
      description: 'The environment name to create a deployment.'
      required: true
    cloud_service:
      description: 'Cloud Service to deploy to (supports GH Pages and GCP)'
      required: true
    cloud_credentials:
      description: 'Credentials of the cloud service where the project will be deployed to'
      required: false
    cloud_bucket:
      description: 'Name of the Cloud service (eg. GCS) bucket'
      required: false
    cloud_lb:
      description: 'Load Balancer Name'
      required: false
    # cache:
    #   description: 'Enable or disable cache'
    #   required: true
    # delete:
    #   description: 'Delete extra files in the destination not found in the source'
    #   required: false
    #   default: 'true'

runs:
  using: "composite"

  steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        path: tmp-e2e
        name: ${{ inputs.artifact_name }}

    - name: Upload E2E HTML Report
      uses: ConfigureID/gh-actions/sync@playwright
      with:
        source_dir: tmp-e2e
        namespace: ${{ inputs.namespace }}
        environment_name: ${{ inputs.environment_name }}/${{ inputs.subpath }}
        
        delete: true
        cache: false          
        # cache: ${{ inputs.cache }}
        # delete: ${{ inputs.delete }}

        cloud_service: ${{ inputs.cloud_service }}
        cloud_bucket: ${{ inputs.cloud_bucket }}
        cloud_credentials: ${{ inputs.cloud_credentials }}
        cloud_lb: '${{ inputs.cloud_lb }}'
    
    - name: Delete Blob report after merge
      if: inputs.delete_artifact === 'true'
      uses: geekyeggo/delete-artifact@v5
      with:
          name: ${{ inputs.artifact_name }}
          failOnError: false