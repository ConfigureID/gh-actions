name: Promote to Environment

# Reusable workflow to Promote a release to a specified environment (eg. integration, staging, production)
# It downloads an existing release file from Github.
# If you prefer to build it when promoting, use "npm-build" workflow and "gh-deploy" action instead
on:
  workflow_call:
    inputs:
      tag:  
        description: 'Release version tag'
        required: true
        type: string
      release_filename:
        description: 'Name of the release file'
        required: true
        type: string
      to:
        description: 'Target environment'
        required: true
        type: string
    secrets:
      github_token:
        description: 'GitHub token with permissions to push to the gh-pages branch'
        required: true

env:
  TMP_PATH: tmp
    
jobs:
  promote:
    name: Promote
    runs-on: ubuntu-latest

    steps:
      - name: Start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.github_token }}
          env: ${{ inputs.to }}
          ref: tags/${{ inputs.tag }}

      - name: Download release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: 'tags/${{ inputs.tag }}'
          file: ${{ inputs.release_filename }}
          token: ${{ secrets.github_token }}

      - name: Unzip release
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq ${{ inputs.release_filename }} -d ${{ env.TMP_PATH }}

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.github_token }}
          publish_dir: ./${{ env.TMP_PATH }}
          destination_dir: ./${{ inputs.to }}

      - name: Update deployment status
        uses: bobheadxi/deployments@v0.4.3
        with:
          step: finish
          token: ${{ secrets.github_token }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://${{ github.event.repository.owner.login }}.github.io/${{ github.event.repository.name }}/${{ inputs.to }}