name: 'GH deploy'
description: 'Deploys an static application to GitHub Pages'

# Action to deploy the project files to Github Pages
# Steps:
# - If an environment name is provided, creates a Github Deployment object with status "start" and the name
# - Download an artifact from a previous step
# - Deploy the files to the specified path (inputs.to) in Github Pages
# - If an environment name is provided, marks the Github Deployment object as "finished" with the status of the workflow (success, failed)
inputs:
  to:  
    description: 'Directory where the project must be deployed to'
    required: true
  artifact_name:
    description: 'The name of the artifact created in a previous step. If not specified, build-output is used'
    required: false
    default: build-output
    type: string
  environment_name:  
    description: 'The environment name to create a deployment. If not specified, no GitHub deployment object is created'
    required: false
    default: ''
  github_token:
    description: 'GitHub token with permissions to push to the gh-pages branch'
    required: true

env:
  TMP_PATH: tmp

runs:
  using: "composite"
  steps:
    - name: Start deployment
      uses: bobheadxi/deployments@v0.4.3
      if: ${{ inputs.environment_name != '' }}
      id: deployment
      with:
        step: start
        token: ${{ inputs.github_token }}
        env: ${{ inputs.environment_name }}
        ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
      
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.artifact_name }}
        path: ./${{ env.TMP_PATH }}
    
    - name: Deploy to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ inputs.github_token }}
        publish_dir: ./${{ env.TMP_PATH }}
        destination_dir: ./${{ inputs.to }}
        
    - name: Update deployment status
      uses: bobheadxi/deployments@v0.4.3
      if: ${{ inputs.environment_name != '' && always() }}
      with:
        step: finish
        token: ${{ inputs.github_token }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
        env_url: https://${{ github.event.repository.owner.login }}.github.io/${{ github.event.repository.name }}/${{ inputs.to }}