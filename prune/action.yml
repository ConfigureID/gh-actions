name: Prune
description: 'Removes the deployment from the cloud service and disbles the environment'

# Action to prune an environment and remove the associated files deployed in the cloud service (supports Github Pages and GCS)
# Useful for example when a PR is closed and the associated deployment is not required anymore.
# Steps:
# - Disables the Github Environment object
# - Removes the directory in Github Pages
inputs:
  namespace:  
    description: 'The project namespace (eg adidas). Used as a prefix for the publish directory'
    required: true
  environment_name:  
    description: 'The environment name associated with the deployment.'
    required: true
  to:
    description: 'Directory where the project are deployed. If not specified namespace/environment_name is used'
    required: false
    default: ''
  github_token:
    description: 'GitHub token with permissions to push to the gh-pages branch'
    required: false
    default: ${{ github.token }}
  cloud_service:
    description: 'Cloud Service to prune (supports GH Pages and GCP)'
    required: true
  cloud_credentials:
    description: 'Credentials of the cloud service where the files will be pruned'
    required: false
  cloud_bucket:
    description: 'Name of the Cloud service (eg. GCS) bucket'
    required: false

runs:
  using: "composite"

  steps:
  
    ##################
    # GH Pages
    ##################

    - name: Create empty dir
      if: ${{ inputs.cloud_service == 'gh_pages' }}
      shell: bash
      run: mkdir empty_dir

    - name: Remove files from environment
      if: ${{ inputs.cloud_service == 'gh_pages' }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ inputs.github_token }}
        publish_dir: ./empty_dir
        destination_dir: ./${{ inputs.environment_name }}

    ##################
    # GCP
    ##################

    # Sets the destination directory to {{env.destination_dir}}.
    # It's inputs.to or (inputs.namespace/inputs.environment_name)
    - name: Set the destination directory
      if: ${{ inputs.cloud_service == 'gcp' }}
      shell: bash
      run: bash ${{ github.action_path }}/../scripts/set_destination.sh
      env:
        DESTINATION: ${{ inputs.to }}
        NAMESPACE: ${{ inputs.namespace }}
        ENVIRONMENT_NAME: ${{ inputs.environment_name }}

    # Copies the current action's repository to the specified location, 
    # so other actions from the same repo may be called (see gcp-run below)
    # This allows us to use the same version of the action for both "deploy" (the current action) and gcp-run
    - name: Copy custom action repository
      if: ${{ inputs.cloud_service == 'gcp' }}
      shell: bash
      run: bash ${{ github.action_path }}/../scripts/copy_actions_repo.sh
      env:
        CUSTOM_ACTION_REPO_SUBDIRECTORY: ${{ github.action_path }}
        DESTINATION_PATH: ${{ github.workspace }}/.github/actions

    - name: Delete files from bucket
      if: ${{ inputs.cloud_service == 'gcp' }}
      uses: ./.github/actions/ConfigureID/gh-actions/gcp-run
      with:
        credentials_json: '${{ inputs.cloud_credentials }}'
        script: gsutil rm -r gs://${{ inputs.cloud_bucket }}/${{ env.destination_dir }}
    

    ##################
    # Remove env
    ##################

    - name: Remove environment
      uses: bobheadxi/deployments@v1.3.0
      with:
        step: delete-env
        token: ${{ inputs.github_token }}
        env: ${{ inputs.environment_name }}
        desc: PR for this branch was closed